{"version":3,"file":"blocknote-shadcn.js","sources":["../src/lib/utils.ts","../src/components/ui/badge.tsx","../src/components/ui/button.tsx","../src/components/ui/card.tsx","../src/components/ui/dropdown-menu.tsx","../src/components/ui/label.tsx","../src/components/ui/form.tsx","../src/components/ui/input.tsx","../src/components/ui/popover.tsx","../src/components/ui/select.tsx","../src/components/ui/tabs.tsx","../src/components/ui/toggle.tsx","../src/components/ui/tooltip.tsx","../src/ShadCNComponentsContext.tsx","../src/form/Form.tsx","../src/form/TextInput.tsx","../src/menu/Menu.tsx","../src/panel/Panel.tsx","../src/panel/PanelTab.tsx","../src/panel/PanelTextInput.tsx","../src/popover/popover.tsx","../src/sideMenu/SideMenu.tsx","../src/sideMenu/SideMenuButton.tsx","../src/suggestionMenu/gridSuggestionMenu/GridSuggestionMenu.tsx","../src/suggestionMenu/gridSuggestionMenu/GridSuggestionMenuEmptyItem.tsx","../src/suggestionMenu/SuggestionMenu.tsx","../src/suggestionMenu/SuggestionMenuEmptyItem.tsx","../src/suggestionMenu/SuggestionMenuItem.tsx","../src/suggestionMenu/SuggestionMenuLabel.tsx","../src/suggestionMenu/SuggestionMenuLoader.tsx","../src/tableHandle/ExtendButton.tsx","../src/tableHandle/TableHandle.tsx","../src/toolbar/Toolbar.tsx","../src/panel/PanelButton.tsx","../src/panel/PanelFileInput.tsx","../src/suggestionMenu/gridSuggestionMenu/GridSuggestionMenuItem.tsx","../src/suggestionMenu/gridSuggestionMenu/GridSuggestionMenuLoader.tsx","../src/index.tsx"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { extendTailwindMerge } from \"tailwind-merge\";\n\n// Ensures that `bn-` prefixed Tailwind classes are recognized as Tailwind\n// classes, so they can be merged correctly.\nconst twMerge = extendTailwindMerge({\n  prefix: \"bn-\",\n});\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst badgeVariants = cva(\n  \"bn-inline-flex bn-items-center bn-rounded-full bn-border bn-px-2.5 bn-py-0.5 bn-text-xs bn-font-semibold bn-transition-colors focus:bn-outline-none focus:bn-ring-2 focus:bn-ring-ring focus:bn-ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bn-border-transparent bn-bg-primary bn-text-primary-foreground hover:bn-bg-primary/80\",\n        secondary:\n          \"bn-border-transparent bn-bg-secondary bn-text-secondary-foreground hover:bn-bg-secondary/80\",\n        destructive:\n          \"bn-border-transparent bn-bg-destructive bn-text-destructive-foreground hover:bn-bg-destructive/80\",\n        outline: \"bn-text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","import { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst buttonVariants = cva(\n  \"bn-inline-flex bn-items-center bn-justify-center bn-whitespace-nowrap bn-rounded-md bn-text-sm bn-font-medium bn-ring-offset-background bn-transition-colors focus-visible:bn-outline-none focus-visible:bn-ring-2 focus-visible:bn-ring-ring focus-visible:bn-ring-offset-2 disabled:bn-pointer-events-none disabled:bn-opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bn-bg-primary bn-text-primary-foreground hover:bn-bg-primary/90\",\n        destructive:\n          \"bn-bg-destructive bn-text-destructive-foreground hover:bn-bg-destructive/90\",\n        outline:\n          \"bn-border bn-border-input bn-bg-background hover:bn-bg-accent hover:bn-text-accent-foreground\",\n        secondary:\n          \"bn-bg-secondary bn-text-secondary-foreground hover:bn-bg-secondary/80\",\n        ghost: \"hover:bn-bg-accent hover:bn-text-accent-foreground\",\n        link: \"bn-text-primary bn-underline-offset-4 hover:bn-underline\",\n      },\n      size: {\n        default: \"bn-h-10 bn-px-4 bn-py-2\",\n        sm: \"bn-h-9 bn-rounded-md bn-px-3\",\n        lg: \"bn-h-11 bn-rounded-md bn-px-8\",\n        icon: \"bn-h-10 bn-w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","import * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"bn-rounded-lg bn-border bn-bg-card bn-text-card-foreground bn-shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"bn-flex bn-flex-col bn-space-y-1.5 bn-p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"bn-text-2xl bn-font-semibold bn-leading-none bn-tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"bn-text-sm bn-text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"bn-p-6 bn-pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"bn-flex bn-items-center bn-p-6 bn-pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n};\n","import * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { Check, ChevronRight, Circle } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"bn-flex bn-cursor-default bn-select-none bn-items-center bn-rounded-sm bn-px-2 bn-py-1.5 bn-text-sm bn-outline-none focus:bn-bg-accent data-[state=open]:bn-bg-accent\",\n      inset && \"bn-pl-8\",\n      className\n    )}\n    {...props}>\n    {children}\n    <ChevronRight className=\"bn-ml-auto bn-h-4 bn-w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName;\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"bn-z-50 bn-min-w-[8rem] bn-overflow-hidden bn-rounded-md bn-border bn-bg-popover bn-p-1 bn-text-popover-foreground bn-shadow-lg data-[state=open]:bn-animate-in data-[state=closed]:bn-animate-out data-[state=closed]:bn-fade-out-0 data-[state=open]:bn-fade-in-0 data-[state=closed]:bn-zoom-out-95 data-[state=open]:bn-zoom-in-95 data-[side=bottom]:bn-slide-in-from-top-2 data-[side=left]:bn-slide-in-from-right-2 data-[side=right]:bn-slide-in-from-left-2 data-[side=top]:bn-slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName;\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  // <DropdownMenuPrimitive.Portal>\n  <DropdownMenuPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"bn-z-50 bn-min-w-[8rem] bn-overflow-hidden bn-rounded-md bn-border bn-bg-popover bn-p-1 bn-text-popover-foreground bn-shadow-md data-[state=open]:bn-animate-in data-[state=closed]:bn-animate-out data-[state=closed]:bn-fade-out-0 data-[state=open]:bn-fade-in-0 data-[state=closed]:bn-zoom-out-95 data-[state=open]:bn-zoom-in-95 data-[side=bottom]:bn-slide-in-from-top-2 data-[side=left]:bn-slide-in-from-right-2 data-[side=right]:bn-slide-in-from-left-2 data-[side=top]:bn-slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n  // </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"bn-relative bn-flex bn-cursor-default bn-select-none bn-items-center bn-rounded-sm bn-px-2 bn-py-1.5 bn-text-sm bn-outline-none bn-transition-colors focus:bn-bg-accent focus:bn-text-accent-foreground data-[disabled]:bn-pointer-events-none data-[disabled]:bn-opacity-50\",\n      inset && \"bn-pl-8\",\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"bn-relative bn-flex bn-cursor-default bn-select-none bn-items-center bn-rounded-sm bn-py-1.5 bn-pl-8 bn-pr-2 bn-text-sm bn-outline-none bn-transition-colors focus:bn-bg-accent focus:bn-text-accent-foreground data-[disabled]:bn-pointer-events-none data-[disabled]:bn-opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}>\n    <span className=\"bn-absolute bn-left-2 bn-flex bn-h-3.5 bn-w-3.5 bn-items-center bn-justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"bn-h-4 bn-w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName;\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"bn-relative bn-flex bn-cursor-default bn-select-none bn-items-center bn-rounded-sm bn-py-1.5 bn-pl-8 bn-pr-2 bn-text-sm bn-outline-none bn-transition-colors focus:bn-bg-accent focus:bn-text-accent-foreground data-[disabled]:bn-pointer-events-none data-[disabled]:bn-opacity-50\",\n      className\n    )}\n    {...props}>\n    <span className=\"bn-absolute bn-left-2 bn-flex bn-h-3.5 bn-w-3.5 bn-items-center bn-justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"bn-h-2 bn-w-2 bn-fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"bn-px-2 bn-py-1.5 bn-text-sm bn-font-semibold\",\n      inset && \"bn-pl-8\",\n      className\n    )}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"bn--mx-1 bn-my-1 bn-h-px bn-bg-muted\", className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"bn-ml-auto bn-text-xs bn-tracking-widest bn-opacity-60\",\n        className\n      )}\n      {...props}\n    />\n  );\n};\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\";\n\nexport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuRadioGroup,\n  DropdownMenuRadioItem,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n};\n","import * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst labelVariants = cva(\n  \"bn-text-sm bn-font-medium bn-leading-none peer-disabled:bn-cursor-not-allowed peer-disabled:bn-opacity-70\"\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport * as React from \"react\";\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\";\n\nimport { cn } from \"../../lib/utils.js\";\nimport { Label } from \"./label.js\";\n\nconst Form = FormProvider;\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n);\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  );\n};\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext);\n  const itemContext = React.useContext(FormItemContext);\n  const { getFieldState, formState } = useFormContext();\n\n  const fieldState = getFieldState(fieldContext.name, formState);\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\");\n  }\n\n  const { id } = itemContext;\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  };\n};\n\ntype FormItemContextValue = {\n  id: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n);\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId();\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"bn-space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  );\n});\nFormItem.displayName = \"FormItem\";\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField();\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"bn-text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  );\n});\nFormLabel.displayName = \"FormLabel\";\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } =\n    useFormField();\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  );\n});\nFormControl.displayName = \"FormControl\";\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField();\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"bn-text-sm bn-text-muted-foreground\", className)}\n      {...props}\n    />\n  );\n});\nFormDescription.displayName = \"FormDescription\";\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField();\n  const body = error ? String(error?.message) : children;\n\n  if (!body) {\n    return null;\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"bn-text-sm bn-font-medium bn-text-destructive\", className)}\n      {...props}>\n      {body}\n    </p>\n  );\n});\nFormMessage.displayName = \"FormMessage\";\n\nexport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  useFormField,\n};\n","import * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"bn-flex bn-h-10 bn-w-full bn-rounded-md bn-border bn-border-input bn-bg-background bn-px-3 bn-py-2 bn-text-sm bn-ring-offset-background file:bn-border-0 file:bn-bg-transparent file:bn-text-sm file:bn-font-medium placeholder:bn-text-muted-foreground focus-visible:bn-outline-none focus-visible:bn-ring-2 focus-visible:bn-ring-ring focus-visible:bn-ring-offset-2 disabled:bn-cursor-not-allowed disabled:bn-opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","import * as PopoverPrimitive from \"@radix-ui/react-popover\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  // <PopoverPrimitive.Portal>\n  <PopoverPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"bn-z-50 bn-w-72 bn-rounded-md bn-border bn-bg-popover bn-p-4 bn-text-popover-foreground bn-shadow-md bn-outline-none data-[state=open]:bn-animate-in data-[state=closed]:bn-animate-out data-[state=closed]:bn-fade-out-0 data-[state=open]:bn-fade-in-0 data-[state=closed]:bn-zoom-out-95 data-[state=open]:bn-zoom-in-95 data-[side=bottom]:bn-slide-in-from-top-2 data-[side=left]:bn-slide-in-from-right-2 data-[side=right]:bn-slide-in-from-left-2 data-[side=top]:bn-slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n  // </PopoverPrimitive.Portal>\n));\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverContent, PopoverTrigger };\n","import * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"bn-flex bn-h-10 bn-w-full bn-items-center bn-justify-between bn-rounded-md bn-border bn-border-input bn-bg-background bn-px-3 bn-py-2 bn-text-sm bn-ring-offset-background placeholder:bn-text-muted-foreground focus:bn-outline-none focus:bn-ring-2 focus:bn-ring-ring focus:bn-ring-offset-2 disabled:bn-cursor-not-allowed disabled:bn-opacity-50 [&>span]:bn-line-clamp-1\",\n      className\n    )}\n    {...props}>\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"bn-h-4 bn-w-4 bn-opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"bn-flex bn-cursor-default bn-items-center bn-justify-center bn-py-1\",\n      className\n    )}\n    {...props}>\n    <ChevronUp className=\"bn-h-4 bn-w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"bn-flex bn-cursor-default bn-items-center bn-justify-center bn-py-1\",\n      className\n    )}\n    {...props}>\n    <ChevronDown className=\"bn-h-4 bn-w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  // <SelectPrimitive.Portal>\n  <SelectPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"bn-relative bn-z-50 bn-max-h-96 bn-min-w-[8rem] bn-overflow-hidden bn-rounded-md bn-border bn-bg-popover bn-text-popover-foreground bn-shadow-md data-[state=open]:bn-animate-in data-[state=closed]:bn-animate-out data-[state=closed]:bn-fade-out-0 data-[state=open]:bn-fade-in-0 data-[state=closed]:bn-zoom-out-95 data-[state=open]:bn-zoom-in-95 data-[side=bottom]:bn-slide-in-from-top-2 data-[side=left]:bn-slide-in-from-right-2 data-[side=right]:bn-slide-in-from-left-2 data-[side=top]:bn-slide-in-from-bottom-2\",\n      position === \"popper\" &&\n        \"data-[side=bottom]:bn-translate-y-1 data-[side=left]:bn--translate-x-1 data-[side=right]:bn-translate-x-1 data-[side=top]:bn--translate-y-1\",\n      className\n    )}\n    position={position}\n    {...props}>\n    <SelectScrollUpButton />\n    <SelectPrimitive.Viewport\n      className={cn(\n        \"bn-p-1\",\n        position === \"popper\" &&\n          \"bn-h-[var(--radix-select-trigger-height)] bn-w-full bn-min-w-[var(--radix-select-trigger-width)]\"\n      )}>\n      {children}\n    </SelectPrimitive.Viewport>\n    <SelectScrollDownButton />\n  </SelectPrimitive.Content>\n  // </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"bn-py-1.5 bn-pl-8 bn-pr-2 bn-text-sm bn-font-semibold\",\n      className\n    )}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"bn-relative bn-flex bn-w-full bn-cursor-default bn-select-none bn-items-center bn-rounded-sm bn-py-1.5 bn-pl-8 bn-pr-2 bn-text-sm bn-outline-none focus:bn-bg-accent focus:bn-text-accent-foreground data-[disabled]:bn-pointer-events-none data-[disabled]:bn-opacity-50\",\n      className\n    )}\n    {...props}>\n    <span className=\"bn-absolute bn-left-2 bn-flex bn-h-3.5 bn-w-3.5 bn-items-center bn-justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"bn-h-4 bn-w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"bn--mx-1 bn-my-1 bn-h-px bn-bg-muted\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n","import * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"bn-inline-flex bn-h-10 bn-items-center bn-justify-center bn-rounded-md bn-bg-muted bn-p-1 bn-text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"bn-inline-flex bn-items-center bn-justify-center bn-whitespace-nowrap bn-rounded-sm bn-px-3 bn-py-1.5 bn-text-sm bn-font-medium bn-ring-offset-background bn-transition-all focus-visible:bn-outline-none focus-visible:bn-ring-2 focus-visible:bn-ring-ring focus-visible:bn-ring-offset-2 disabled:bn-pointer-events-none disabled:bn-opacity-50 data-[state=active]:bn-bg-background data-[state=active]:bn-text-foreground data-[state=active]:bn-shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"bn-mt-2 bn-ring-offset-background focus-visible:bn-outline-none focus-visible:bn-ring-2 focus-visible:bn-ring-ring focus-visible:bn-ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsContent, TabsList, TabsTrigger };\n","import * as TogglePrimitive from \"@radix-ui/react-toggle\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst toggleVariants = cva(\n  \"bn-inline-flex bn-items-center bn-justify-center bn-rounded-md bn-text-sm bn-font-medium bn-ring-offset-background bn-transition-colors hover:bn-bg-muted hover:bn-text-muted-foreground focus-visible:bn-outline-none focus-visible:bn-ring-2 focus-visible:bn-ring-ring focus-visible:bn-ring-offset-2 disabled:bn-pointer-events-none disabled:bn-opacity-50 data-[state=on]:bn-bg-accent data-[state=on]:bn-text-accent-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bn-bg-transparent\",\n        outline:\n          \"bn-border bn-border-input bn-bg-transparent hover:bn-bg-accent hover:bn-text-accent-foreground\",\n      },\n      size: {\n        default: \"bn-h-10 bn-px-3\",\n        sm: \"bn-h-9 bn-px-2.5\",\n        lg: \"bn-h-11 bn-px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n);\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n));\n\nToggle.displayName = TogglePrimitive.Root.displayName;\n\nexport { Toggle, toggleVariants };\n","import * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\nimport * as React from \"react\";\n\nimport { cn } from \"../../lib/utils.js\";\n\nconst TooltipProvider = TooltipPrimitive.Provider;\n\nconst Tooltip = TooltipPrimitive.Root;\n\nconst TooltipTrigger = TooltipPrimitive.Trigger;\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"bn-z-50 bn-overflow-hidden bn-rounded-md bn-border bn-bg-popover bn-px-3 bn-py-1.5 bn-text-sm bn-text-popover-foreground bn-shadow-md bn-animate-in bn-fade-in-0 bn-zoom-in-95 data-[state=closed]:bn-animate-out data-[state=closed]:bn-fade-out-0 data-[state=closed]:bn-zoom-out-95 data-[side=bottom]:bn-slide-in-from-top-2 data-[side=left]:bn-slide-in-from-right-2 data-[side=right]:bn-slide-in-from-left-2 data-[side=top]:bn-slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n));\nTooltipContent.displayName = TooltipPrimitive.Content.displayName;\n\nexport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger };\n","import { Badge as ShadCNBadge } from \"./components/ui/badge.js\";\nimport { Button as ShadCNButton } from \"./components/ui/button.js\";\nimport {\n  Card as ShadCNCard,\n  CardContent as ShadCNCardContent,\n} from \"./components/ui/card.js\";\nimport {\n  DropdownMenu as ShadCNDropdownMenu,\n  DropdownMenuCheckboxItem as ShadCNDropdownMenuCheckboxItem,\n  DropdownMenuContent as ShadCNDropdownMenuContent,\n  DropdownMenuItem as ShadCNDropdownMenuItem,\n  DropdownMenuLabel as ShadCNDropdownMenuLabel,\n  DropdownMenuSeparator as ShadCNDropdownMenuSeparator,\n  DropdownMenuSub as ShadCNDropdownMenuSub,\n  DropdownMenuSubContent as ShadCNDropdownMenuSubContent,\n  DropdownMenuSubTrigger as ShadCNDropdownMenuSubTrigger,\n  DropdownMenuTrigger as ShadCNDropdownMenuTrigger,\n} from \"./components/ui/dropdown-menu.js\";\nimport { Form as ShadCNForm } from \"./components/ui/form.js\";\nimport { Input as ShadCNInput } from \"./components/ui/input.js\";\nimport { Label as ShadCNLabel } from \"./components/ui/label.js\";\nimport {\n  Popover as ShadCNPopover,\n  PopoverContent as ShadCNPopoverContent,\n  PopoverTrigger as ShadCNPopoverTrigger,\n} from \"./components/ui/popover.js\";\nimport {\n  Select as ShadCNSelect,\n  SelectContent as ShadCNSelectContent,\n  SelectItem as ShadCNSelectItem,\n  SelectTrigger as ShadCNSelectTrigger,\n  SelectValue as ShadCNSelectValue,\n} from \"./components/ui/select.js\";\nimport {\n  Tabs as ShadCNTabs,\n  TabsContent as ShadCNTabsContent,\n  TabsList as ShadCNTabsList,\n  TabsTrigger as ShadCNTabsTrigger,\n} from \"./components/ui/tabs.js\";\nimport { Toggle as ShadCNToggle } from \"./components/ui/toggle.js\";\nimport {\n  Tooltip as ShadCNTooltip,\n  TooltipContent as ShadCNTooltipContent,\n  TooltipProvider as ShadCNTooltipProvider,\n  TooltipTrigger as ShadCNTooltipTrigger,\n} from \"./components/ui/tooltip.js\";\n\nimport { createContext, useContext } from \"react\";\n\nexport const ShadCNDefaultComponents = {\n  Badge: {\n    Badge: ShadCNBadge,\n  },\n  Button: {\n    Button: ShadCNButton,\n  },\n  Card: {\n    Card: ShadCNCard,\n    CardContent: ShadCNCardContent,\n  },\n  DropdownMenu: {\n    DropdownMenu: ShadCNDropdownMenu,\n    DropdownMenuCheckboxItem: ShadCNDropdownMenuCheckboxItem,\n    DropdownMenuContent: ShadCNDropdownMenuContent,\n    DropdownMenuItem: ShadCNDropdownMenuItem,\n    DropdownMenuLabel: ShadCNDropdownMenuLabel,\n    DropdownMenuSeparator: ShadCNDropdownMenuSeparator,\n    DropdownMenuSub: ShadCNDropdownMenuSub,\n    DropdownMenuSubContent: ShadCNDropdownMenuSubContent,\n    DropdownMenuSubTrigger: ShadCNDropdownMenuSubTrigger,\n    DropdownMenuTrigger: ShadCNDropdownMenuTrigger,\n  },\n  Form: {\n    Form: ShadCNForm,\n  },\n  Input: {\n    Input: ShadCNInput,\n  },\n  Label: {\n    Label: ShadCNLabel,\n  },\n  Popover: {\n    Popover: ShadCNPopover,\n    PopoverContent: ShadCNPopoverContent,\n    PopoverTrigger: ShadCNPopoverTrigger,\n  },\n  Select: {\n    Select: ShadCNSelect,\n    SelectContent: ShadCNSelectContent,\n    SelectItem: ShadCNSelectItem,\n    SelectTrigger: ShadCNSelectTrigger,\n    SelectValue: ShadCNSelectValue,\n  },\n  Tabs: {\n    Tabs: ShadCNTabs,\n    TabsContent: ShadCNTabsContent,\n    TabsList: ShadCNTabsList,\n    TabsTrigger: ShadCNTabsTrigger,\n  },\n  Toggle: {\n    Toggle: ShadCNToggle,\n  },\n  Tooltip: {\n    Tooltip: ShadCNTooltip,\n    TooltipContent: ShadCNTooltipContent,\n    TooltipProvider: ShadCNTooltipProvider,\n    TooltipTrigger: ShadCNTooltipTrigger,\n  },\n};\n\nexport type ShadCNComponents = typeof ShadCNDefaultComponents;\n\nexport const ShadCNComponentsContext = createContext<\n  ShadCNComponents | undefined\n>(undefined);\n\nexport function useShadCNComponentsContext() {\n  return useContext(ShadCNComponentsContext);\n}\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { useForm } from \"react-hook-form\";\n\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const Form = (props: ComponentProps[\"Generic\"][\"Form\"][\"Root\"]) => {\n  const { children, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  const form = useForm();\n\n  return (\n    <ShadCNComponents.Form.Form {...form}>\n      {children}\n    </ShadCNComponents.Form.Form>\n  );\n};\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const TextInput = forwardRef<\n  HTMLInputElement,\n  ComponentProps[\"Generic\"][\"Form\"][\"TextInput\"]\n>((props, ref) => {\n  const {\n    className,\n    name,\n    label,\n    icon, // TODO: implement\n    value,\n    autoFocus,\n    placeholder,\n    onKeyDown,\n    onChange,\n    onSubmit,\n    ...rest\n  } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  if (!label) {\n    return (\n      <ShadCNComponents.Input.Input\n        aria-label={name}\n        name={name}\n        autoFocus={autoFocus}\n        placeholder={placeholder}\n        value={value}\n        onKeyDown={onKeyDown}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        ref={ref}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <ShadCNComponents.Label.Label htmlFor={label}>\n        {label}\n      </ShadCNComponents.Label.Label>\n      <ShadCNComponents.Input.Input\n        className={className}\n        id={label}\n        name={name}\n        autoFocus={autoFocus}\n        placeholder={placeholder}\n        value={value}\n        onKeyDown={onKeyDown}\n        onChange={onChange}\n        onSubmit={onSubmit}\n      />\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { ChevronRight } from \"lucide-react\";\nimport { forwardRef, useMemo } from \"react\";\n\nimport type { DropdownMenuTrigger as ShadCNDropdownMenuTrigger } from \"../components/ui/dropdown-menu.js\";\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\n// hacky HoC to change DropdownMenuTrigger to open a menu on PointerUp instead of PointerDown\n// Needed to fix this issue: https://github.com/radix-ui/primitives/issues/2867\nconst MenuTriggerWithPointerUp = (Comp: typeof ShadCNDropdownMenuTrigger) =>\n  forwardRef<any, React.ComponentProps<typeof ShadCNDropdownMenuTrigger>>(\n    (props, ref) => {\n      return (\n        <Comp\n          onPointerDown={(e) => {\n            if (!(e.nativeEvent as any).fakeEvent) {\n              // setting ctrlKey will block the menu from opening\n              // as it will block this line: https://github.com/radix-ui/primitives/blob/b32a93318cdfce383c2eec095710d35ffbd33a1c/packages/react/dropdown-menu/src/DropdownMenu.tsx#L120\n              e.ctrlKey = true;\n            }\n          }}\n          onPointerUp={(event) => {\n            // dispatch a pointerdown event so the Radix pointer down handler gets called that opens the menu\n            const e = new PointerEvent(\"pointerdown\", event.nativeEvent);\n            (e as any).fakeEvent = true;\n            event.target.dispatchEvent(e);\n          }}\n          {...props}\n          ref={ref}\n        />\n      );\n    }\n  );\n\nexport const Menu = (props: ComponentProps[\"Generic\"][\"Menu\"][\"Root\"]) => {\n  const {\n    children,\n    onOpenChange,\n    position, // Unused\n    sub,\n    ...rest\n  } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  if (sub) {\n    return (\n      <ShadCNComponents.DropdownMenu.DropdownMenuSub\n        onOpenChange={onOpenChange}>\n        {children}\n      </ShadCNComponents.DropdownMenu.DropdownMenuSub>\n    );\n  } else {\n    return (\n      <ShadCNComponents.DropdownMenu.DropdownMenu onOpenChange={onOpenChange}>\n        {children}\n      </ShadCNComponents.DropdownMenu.DropdownMenu>\n    );\n  }\n};\n\nexport const MenuTrigger = (\n  props: ComponentProps[\"Generic\"][\"Menu\"][\"Trigger\"]\n) => {\n  const { children, sub, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  const DropdownMenuTrigger = useMemo(\n    () =>\n      MenuTriggerWithPointerUp(\n        ShadCNComponents.DropdownMenu.DropdownMenuTrigger\n      ),\n    [ShadCNComponents.DropdownMenu.DropdownMenuTrigger]\n  );\n\n  if (sub) {\n    return (\n      <ShadCNComponents.DropdownMenu.DropdownMenuSubTrigger>\n        {children}\n      </ShadCNComponents.DropdownMenu.DropdownMenuSubTrigger>\n    );\n  } else {\n    return (\n      <DropdownMenuTrigger asChild={true} {...rest}>\n        {children}\n      </DropdownMenuTrigger>\n    );\n  }\n};\n\nexport const MenuDropdown = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"Generic\"][\"Menu\"][\"Dropdown\"]\n>((props, ref) => {\n  const { className, children, sub, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  if (sub) {\n    return (\n      <ShadCNComponents.DropdownMenu.DropdownMenuSubContent\n        className={className}\n        ref={ref}>\n        {children}\n      </ShadCNComponents.DropdownMenu.DropdownMenuSubContent>\n    );\n  } else {\n    return (\n      <ShadCNComponents.DropdownMenu.DropdownMenuContent\n        className={className}\n        ref={ref}>\n        {children}\n      </ShadCNComponents.DropdownMenu.DropdownMenuContent>\n    );\n  }\n});\n\nexport const MenuItem = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"Generic\"][\"Menu\"][\"Item\"]\n>((props, ref) => {\n  const { className, children, icon, checked, subTrigger, onClick, ...rest } =\n    props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  if (subTrigger) {\n    return (\n      <>\n        {icon}\n        {children}\n      </>\n    );\n  }\n\n  if (checked !== undefined) {\n    return (\n      <ShadCNComponents.DropdownMenu.DropdownMenuCheckboxItem\n        className={cn(className, \"bn-gap-1\")}\n        ref={ref}\n        checked={checked}\n        onClick={onClick}\n        {...rest}>\n        {icon}\n        {children}\n      </ShadCNComponents.DropdownMenu.DropdownMenuCheckboxItem>\n    );\n  }\n\n  return (\n    <ShadCNComponents.DropdownMenu.DropdownMenuItem\n      className={className}\n      ref={ref}\n      onClick={onClick}\n      {...rest}>\n      {icon}\n      {children}\n      {subTrigger && <ChevronRight className=\"bn-ml-auto bn-h-4 bn-w-4\" />}\n    </ShadCNComponents.DropdownMenu.DropdownMenuItem>\n  );\n});\n\nexport const MenuDivider = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"Generic\"][\"Menu\"][\"Divider\"]\n>((props, ref) => {\n  const { className, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.DropdownMenu.DropdownMenuSeparator\n      className={className}\n      ref={ref}\n    />\n  );\n});\n\nexport const MenuLabel = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"Generic\"][\"Menu\"][\"Label\"]\n>((props, ref) => {\n  const { className, children, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.DropdownMenu.DropdownMenuLabel\n      className={className}\n      ref={ref}>\n      {children}\n    </ShadCNComponents.DropdownMenu.DropdownMenuLabel>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const Panel = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"FilePanel\"][\"Root\"]\n>((props, ref) => {\n  const {\n    className,\n    tabs,\n    defaultOpenTab,\n    openTab,\n    setOpenTab,\n    loading, // TODO: implement loader\n    ...rest\n  } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Tabs.Tabs\n      className={cn(className, \"bn-bg-popover bn-p-2 bn-rounded-lg\")}\n      ref={ref}\n      value={openTab}\n      defaultValue={defaultOpenTab}\n      onValueChange={setOpenTab}>\n      {/*{loading && <LoadingOverlay visible={loading} />}*/}\n\n      <ShadCNComponents.Tabs.TabsList>\n        {tabs.map((tab) => (\n          <ShadCNComponents.Tabs.TabsTrigger value={tab.name} key={tab.name}>\n            {tab.name}\n          </ShadCNComponents.Tabs.TabsTrigger>\n        ))}\n      </ShadCNComponents.Tabs.TabsList>\n\n      {tabs.map((tab) => (\n        <ShadCNComponents.Tabs.TabsContent value={tab.name} key={tab.name}>\n          <ShadCNComponents.Card.Card>\n            <ShadCNComponents.Card.CardContent className={\"bn-p-4\"}>\n              {tab.tabPanel}\n            </ShadCNComponents.Card.CardContent>\n          </ShadCNComponents.Card.Card>\n        </ShadCNComponents.Tabs.TabsContent>\n      ))}\n    </ShadCNComponents.Tabs.Tabs>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\n\nexport const PanelTab = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"FilePanel\"][\"TabPanel\"]\n>((props, ref) => {\n  const { className, children, ...rest } = props;\n\n  assertEmpty(rest);\n\n  return (\n    <div\n      className={cn(\n        className,\n        \"bn-flex bn-flex-col bn-gap-2 bn-items-start bn-justify-center\"\n      )}\n      ref={ref}>\n      {children}\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const PanelTextInput = forwardRef<\n  HTMLInputElement,\n  ComponentProps[\"FilePanel\"][\"TextInput\"]\n>((props, ref) => {\n  const { className, value, placeholder, onKeyDown, onChange, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Input.Input\n      data-test={\"embed-input\"}\n      className={cn(className, \"bn-w-80\")}\n      ref={ref}\n      value={value}\n      placeholder={placeholder}\n      onKeyDown={onKeyDown}\n      onChange={onChange}\n    />\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const Popover = (\n  props: ComponentProps[\"Generic\"][\"Popover\"][\"Root\"]\n) => {\n  const {\n    children,\n    opened,\n    position, // unused\n    ...rest\n  } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Popover.Popover open={opened}>\n      {children}\n    </ShadCNComponents.Popover.Popover>\n  );\n};\n\nexport const PopoverTrigger = forwardRef(\n  (props: ComponentProps[\"Generic\"][\"Popover\"][\"Trigger\"], ref: any) => {\n    const { children, ...rest } = props;\n\n    assertEmpty(rest);\n\n    const ShadCNComponents = useShadCNComponentsContext()!;\n\n    return (\n      <ShadCNComponents.Popover.PopoverTrigger ref={ref} asChild={true}>\n        {children}\n      </ShadCNComponents.Popover.PopoverTrigger>\n    );\n  }\n);\n\nexport const PopoverContent = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"Generic\"][\"Popover\"][\"Content\"]\n>((props, ref) => {\n  const { className, variant, children, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Popover.PopoverContent\n      sideOffset={8}\n      className={cn(\n        className,\n        \"bn-flex bn-flex-col bn-gap-2\",\n        variant === \"panel-popover\"\n          ? \"bn-p-0 bn-border-none bn-shadow-none bn-max-w-none bn-w-fit\"\n          : \"\"\n      )}\n      ref={ref}>\n      {children}\n    </ShadCNComponents.Popover.PopoverContent>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nexport const SideMenu = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"SideMenu\"][\"Root\"]\n>((props, ref) => {\n  const { className, children, ...rest } = props;\n\n  assertEmpty(rest, false);\n\n  return (\n    <div className={className} ref={ref} {...rest}>\n      {children}\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const SideMenuButton = forwardRef<\n  HTMLButtonElement,\n  ComponentProps[\"SideMenu\"][\"Button\"]\n>((props, ref) => {\n  const {\n    className,\n    children,\n    icon,\n    onClick,\n    onDragEnd,\n    onDragStart,\n    draggable,\n    label,\n    ...rest\n  } = props;\n\n  // false, because rest props can be added by ariakit when button is used as a trigger\n  // assertEmpty in this case is only used at typescript level, not runtime level\n  assertEmpty(rest, false);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Button.Button\n      variant={\"ghost\"}\n      className={cn(className, \"bn-text-gray-400\")}\n      ref={ref}\n      aria-label={label}\n      onClick={onClick}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n      draggable={draggable}\n      {...rest}>\n      {icon}\n      {children}\n    </ShadCNComponents.Button.Button>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nexport const GridSuggestionMenu = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"GridSuggestionMenu\"][\"Root\"]\n>((props, ref) => {\n  const { className, children, id, columns, ...rest } = props;\n\n  assertEmpty(rest);\n\n  return (\n    <div\n      className={className}\n      style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` } as any}\n      ref={ref}\n      id={id}\n      role=\"grid\">\n      {children}\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nexport const GridSuggestionMenuEmptyItem = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"GridSuggestionMenu\"][\"EmptyItem\"]\n>((props, ref) => {\n  const { className, children, columns, ...rest } = props;\n\n  assertEmpty(rest);\n\n  return (\n    <div\n      className={className}\n      style={{ gridColumn: `1 / ${columns + 1}` }}\n      ref={ref}>\n      {children}\n    </div>\n  );\n});\n","import { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { assertEmpty } from \"@blocknote/core\";\nimport { cn } from \"../lib/utils.js\";\n\nexport const SuggestionMenu = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"SuggestionMenu\"][\"Root\"]\n>((props, ref) => {\n  const { className, children, id, ...rest } = props;\n\n  assertEmpty(rest);\n\n  return (\n    <div\n      id={id}\n      role=\"listbox\"\n      // Styles from ShadCN DropdownMenuContent component\n      className={cn(\n        \"bn-z-50 bn-min-w-[8rem] bn-overflow-auto bn-rounded-md bn-border bn-bg-popover bn-p-1 bn-text-popover-foreground bn-shadow-md data-[state=open]:bn-animate-in data-[state=closed]:bn-animate-out data-[state=closed]:bn-fade-out-0 data-[state=open]:bn-fade-in-0 data-[state=closed]:bn-zoom-out-95 data-[state=open]:bn-zoom-in-95 data-[side=bottom]:bn-slide-in-from-top-2 data-[side=left]:bn-slide-in-from-right-2 data-[side=right]:bn-slide-in-from-left-2 data-[side=top]:bn-slide-in-from-bottom-2\",\n        className\n      )}\n      ref={ref}>\n      {children}\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\n\nexport const SuggestionMenuEmptyItem = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"SuggestionMenu\"][\"EmptyItem\"]\n>((props, ref) => {\n  const { className, children, ...rest } = props;\n\n  assertEmpty(rest);\n\n  return (\n    <div\n      // Styles from ShadCN DropdownMenuItem component\n      className={cn(\n        \"bn-relative bn-flex bn-cursor-default bn-select-none bn-items-center bn-rounded-sm bn-px-2 bn-py-1.5 bn-text-sm bn-outline-none bn-transition-colors focus:bn-bg-accent focus:bn-text-accent-foreground data-[disabled]:bn-pointer-events-none data-[disabled]:bn-opacity-50\",\n        className\n      )}\n      ref={ref}>\n      <div>{children}</div>\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps, elementOverflow, mergeRefs } from \"@blocknote/react\";\nimport { forwardRef, useEffect, useRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const SuggestionMenuItem = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"SuggestionMenu\"][\"Item\"]\n>((props, ref) => {\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  const { className, item, isSelected, onClick, id, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const itemRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!itemRef.current || !isSelected) {\n      return;\n    }\n\n    const overflow = elementOverflow(\n      itemRef.current,\n      document.querySelector(\".bn-suggestion-menu\")!\n    );\n    if (overflow === \"top\") {\n      itemRef.current.scrollIntoView(true);\n    } else if (overflow === \"bottom\") {\n      itemRef.current.scrollIntoView(false);\n    }\n  }, [isSelected]);\n\n  return (\n    <div\n      // Styles from ShadCN DropdownMenuItem component\n      className={cn(\n        \"bn-relative bn-flex bn-cursor-pointer bn-select-none bn-items-center bn-rounded-sm bn-px-2 bn-py-1.5 bn-text-sm bn-outline-none bn-transition-colors focus:bn-bg-accent focus:bn-text-accent-foreground data-[disabled]:bn-pointer-events-none data-[disabled]:bn-opacity-50\",\n        className\n      )}\n      ref={mergeRefs([ref, itemRef])}\n      id={id}\n      onClick={onClick}\n      role=\"option\"\n      aria-selected={isSelected || undefined}>\n      {item.icon && (\n        <div className=\"bn-p-3\" data-position=\"left\">\n          {item.icon}\n        </div>\n      )}\n      <div className=\"bn-flex-1\">\n        <div className=\"bn-text-base\">{item.title}</div>\n        <div className=\"bn-text-xs\">{item.subtext}</div>\n      </div>\n      {item.badge && (\n        <div data-position=\"right\" className=\"bn-text-xs\">\n          <ShadCNComponents.Badge.Badge variant={\"secondary\"}>\n            {item.badge}\n          </ShadCNComponents.Badge.Badge>\n        </div>\n      )}\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\n\nexport const SuggestionMenuLabel = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"SuggestionMenu\"][\"Label\"]\n>((props, ref) => {\n  const { className, children, ...rest } = props;\n\n  assertEmpty(rest);\n\n  return (\n    <div\n      // Styles from ShadCN DropdownMenuLabel component\n      className={cn(\"bn-px-2 bn-py-1.5 bn-text-sm bn-font-semibold\", className)}\n      ref={ref}>\n      {children}\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nexport const SuggestionMenuLoader = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"SuggestionMenu\"][\"Loader\"]\n>((props, ref) => {\n  const { className, children, ...rest } = props;\n\n  assertEmpty(rest);\n\n  return (\n    <div className={className} ref={ref}>\n      {children}\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const ExtendButton = forwardRef<\n  HTMLButtonElement,\n  ComponentProps[\"TableHandle\"][\"ExtendButton\"]\n>((props, ref) => {\n  const { className, children, onMouseDown, onClick, ...rest } = props;\n\n  // false, because rest props can be added by shadcn when button is used as a trigger\n  // assertEmpty in this case is only used at typescript level, not runtime level\n  assertEmpty(rest, false);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Button.Button\n      variant={\"ghost\"}\n      className={cn(\n        className,\n        \"bn-p-0 bn-h-full bn-w-full bn-text-gray-400\",\n        className?.includes(\"bn-extend-button-add-remove-columns\")\n          ? \"bn-ml-1\"\n          : \"bn-mt-1\",\n        className?.includes(\"bn-extend-button-editing\")\n          ? \"bn-bg-accent bn-text-accent-foreground\"\n          : \"\"\n      )}\n      ref={ref}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n      {...rest}>\n      {children}\n    </ShadCNComponents.Button.Button>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const TableHandle = forwardRef<\n  HTMLButtonElement,\n  ComponentProps[\"TableHandle\"][\"Root\"]\n>((props, ref) => {\n  const {\n    className,\n    children,\n    draggable,\n    onDragStart,\n    onDragEnd,\n    style,\n    label,\n    ...rest\n  } = props;\n\n  // false, because rest props can be added by shadcn when button is used as a trigger\n  // assertEmpty in this case is only used at typescript level, not runtime level\n  assertEmpty(rest, false);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Button.Button\n      variant={\"ghost\"}\n      className={cn(className, \"bn-p-0 bn-h-fit bn-w-fit bn-text-gray-400\")}\n      ref={ref}\n      aria-label={label}\n      draggable={draggable}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n      style={style}\n      {...rest}>\n      {children}\n    </ShadCNComponents.Button.Button>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { cn } from \"../lib/utils.js\";\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\ntype ToolbarProps = ComponentProps[\"FormattingToolbar\"][\"Root\"] &\n  ComponentProps[\"LinkToolbar\"][\"Root\"];\n\nexport const Toolbar = forwardRef<HTMLDivElement, ToolbarProps>(\n  (props, ref) => {\n    const { className, children, onMouseEnter, onMouseLeave, ...rest } = props;\n\n    assertEmpty(rest);\n\n    const ShadCNComponents = useShadCNComponentsContext()!;\n\n    return (\n      <ShadCNComponents.Tooltip.TooltipProvider delayDuration={0}>\n        <div\n          className={cn(\n            className,\n            \"bn-flex bn-gap-1 bn-p-1 bn-bg-popover bn-text-popover-foreground bn-border bn-rounded-lg bn-shadow-md\"\n          )}\n          ref={ref}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}>\n          {children}\n        </div>\n      </ShadCNComponents.Tooltip.TooltipProvider>\n    );\n  }\n);\n\ntype ToolbarButtonProps = ComponentProps[\"FormattingToolbar\"][\"Button\"] &\n  ComponentProps[\"LinkToolbar\"][\"Button\"];\n\nexport const ToolbarButton = forwardRef<HTMLButtonElement, ToolbarButtonProps>(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      mainTooltip,\n      secondaryTooltip,\n      icon,\n      isSelected,\n      isDisabled,\n      onClick,\n      label,\n      ...rest\n    } = props;\n\n    // false, because rest props can be added by shadcn when button is used as a trigger\n    // assertEmpty in this case is only used at typescript level, not runtime level\n    assertEmpty(rest, false);\n\n    const ShadCNComponents = useShadCNComponentsContext()!;\n\n    const trigger =\n      isSelected === undefined ? (\n        <ShadCNComponents.Button.Button\n          className={className}\n          variant=\"ghost\"\n          disabled={isDisabled}\n          onClick={onClick}\n          ref={ref}\n          aria-label={label}\n          {...rest}>\n          {icon}\n          {children}\n        </ShadCNComponents.Button.Button>\n      ) : (\n        <ShadCNComponents.Toggle.Toggle\n          className={cn(\n            className,\n            \"data-[state=open]:bg-accent data-[state=closed]:text-accent-foreground\"\n          )}\n          aria-label={label}\n          onClick={onClick}\n          pressed={isSelected}\n          disabled={isDisabled}\n          data-state={isSelected ? \"on\" : \"off\"}\n          data-disabled={isDisabled}\n          ref={ref}\n          {...rest}>\n          {icon}\n          {children}\n        </ShadCNComponents.Toggle.Toggle>\n      );\n\n    return (\n      <ShadCNComponents.Tooltip.Tooltip>\n        <ShadCNComponents.Tooltip.TooltipTrigger asChild>\n          {trigger}\n        </ShadCNComponents.Tooltip.TooltipTrigger>\n        <ShadCNComponents.Tooltip.TooltipContent\n          className={\"bn-flex bn-flex-col bn-items-center\"}>\n          <span>{mainTooltip}</span>\n          {secondaryTooltip && <span>{secondaryTooltip}</span>}\n        </ShadCNComponents.Tooltip.TooltipContent>\n      </ShadCNComponents.Tooltip.Tooltip>\n    );\n  }\n);\n\nexport const ToolbarSelect = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"FormattingToolbar\"][\"Select\"]\n>((props, ref) => {\n  const { className, items, isDisabled, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  // TODO?\n  const SelectItemContent = (props: any) => (\n    <div className={\"bn-flex bn-gap-1 bn-items-center\"}>\n      {props.icon}\n      {props.text}\n    </div>\n  );\n\n  const selectedItem = items.filter((p) => p.isSelected)[0];\n\n  if (!selectedItem) {\n    return null;\n  }\n\n  return (\n    <ShadCNComponents.Select.Select\n      value={selectedItem.text}\n      onValueChange={(value) =>\n        items.find((item) => item.text === value)!.onClick?.()\n      }\n      disabled={isDisabled}>\n      <ShadCNComponents.Select.SelectTrigger className={\"bn-border-none\"}>\n        <ShadCNComponents.Select.SelectValue />\n      </ShadCNComponents.Select.SelectTrigger>\n      <ShadCNComponents.Select.SelectContent className={className} ref={ref}>\n        {items.map((item) => (\n          <ShadCNComponents.Select.SelectItem\n            disabled={item.isDisabled}\n            key={item.text}\n            value={item.text}>\n            <SelectItemContent {...item} />\n          </ShadCNComponents.Select.SelectItem>\n        ))}\n      </ShadCNComponents.Select.SelectContent>\n    </ShadCNComponents.Select.Select>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const PanelButton = forwardRef<\n  HTMLButtonElement,\n  ComponentProps[\"FilePanel\"][\"Button\"]\n>((props, ref) => {\n  const { className, children, onClick, label, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Button.Button\n      type={\"submit\"}\n      className={className}\n      aria-label={label}\n      ref={ref}\n      onClick={onClick}>\n      {children}\n    </ShadCNComponents.Button.Button>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nimport { useShadCNComponentsContext } from \"../ShadCNComponentsContext.js\";\n\nexport const PanelFileInput = forwardRef<\n  HTMLInputElement,\n  ComponentProps[\"FilePanel\"][\"FileInput\"]\n>((props, ref) => {\n  const { className, accept, value, placeholder, onChange, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const ShadCNComponents = useShadCNComponentsContext()!;\n\n  return (\n    <ShadCNComponents.Input.Input\n      type={\"file\"}\n      className={className}\n      ref={ref}\n      accept={accept}\n      value={value ? value.name : undefined}\n      onChange={async (e) => onChange?.(e.target.files![0])}\n      placeholder={placeholder}\n    />\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps, elementOverflow, mergeRefs } from \"@blocknote/react\";\nimport { forwardRef, useEffect, useRef } from \"react\";\n\nexport const GridSuggestionMenuItem = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"GridSuggestionMenu\"][\"Item\"]\n>((props, ref) => {\n  const { className, isSelected, onClick, item, id, ...rest } = props;\n\n  assertEmpty(rest);\n\n  const itemRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!itemRef.current || !isSelected) {\n      return;\n    }\n\n    const overflow = elementOverflow(\n      itemRef.current,\n      document.querySelector(\".bn-grid-suggestion-menu\")!\n    );\n\n    if (overflow === \"top\") {\n      itemRef.current.scrollIntoView(true);\n    } else if (overflow === \"bottom\") {\n      itemRef.current.scrollIntoView(false);\n    }\n  }, [isSelected]);\n\n  return (\n    <div\n      className={className}\n      ref={mergeRefs([ref, itemRef])}\n      id={id}\n      role=\"option\"\n      onClick={onClick}\n      aria-selected={isSelected || undefined}>\n      {item.icon}\n    </div>\n  );\n});\n","import { assertEmpty } from \"@blocknote/core\";\nimport { ComponentProps } from \"@blocknote/react\";\nimport { forwardRef } from \"react\";\n\nexport const GridSuggestionMenuLoader = forwardRef<\n  HTMLDivElement,\n  ComponentProps[\"GridSuggestionMenu\"][\"Loader\"]\n>((props, ref) => {\n  const {\n    className,\n    children, // unused, using \"dots\" instead\n    columns,\n    ...rest\n  } = props;\n\n  assertEmpty(rest);\n\n  return (\n    <div\n      className={className}\n      style={{ gridColumn: `1 / ${columns + 1}` }}\n      ref={ref}>\n      {children}\n    </div>\n  );\n});\n","import {\n  BlockSchema,\n  InlineContentSchema,\n  mergeCSSClasses,\n  StyleSchema,\n} from \"@blocknote/core\";\nimport {\n  BlockNoteViewProps,\n  BlockNoteViewRaw,\n  Components,\n  ComponentsContext,\n} from \"@blocknote/react\";\nimport { useMemo } from \"react\";\n\nimport { Form } from \"./form/Form.js\";\nimport { TextInput } from \"./form/TextInput.js\";\nimport {\n  Menu,\n  MenuDivider,\n  MenuDropdown,\n  MenuItem,\n  MenuLabel,\n  MenuTrigger,\n} from \"./menu/Menu.js\";\nimport { Panel } from \"./panel/Panel.js\";\nimport { PanelTab } from \"./panel/PanelTab.js\";\nimport { PanelTextInput } from \"./panel/PanelTextInput.js\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"./popover/popover.js\";\nimport {\n  ShadCNComponents,\n  ShadCNComponentsContext,\n  ShadCNDefaultComponents,\n} from \"./ShadCNComponentsContext.js\";\nimport { SideMenu } from \"./sideMenu/SideMenu.js\";\nimport { SideMenuButton } from \"./sideMenu/SideMenuButton.js\";\nimport { GridSuggestionMenu } from \"./suggestionMenu/gridSuggestionMenu/GridSuggestionMenu.js\";\nimport { GridSuggestionMenuEmptyItem } from \"./suggestionMenu/gridSuggestionMenu/GridSuggestionMenuEmptyItem.js\";\nimport { SuggestionMenu } from \"./suggestionMenu/SuggestionMenu.js\";\nimport { SuggestionMenuEmptyItem } from \"./suggestionMenu/SuggestionMenuEmptyItem.js\";\nimport { SuggestionMenuItem } from \"./suggestionMenu/SuggestionMenuItem.js\";\nimport { SuggestionMenuLabel } from \"./suggestionMenu/SuggestionMenuLabel.js\";\nimport { SuggestionMenuLoader } from \"./suggestionMenu/SuggestionMenuLoader.js\";\nimport { ExtendButton } from \"./tableHandle/ExtendButton.js\";\nimport { TableHandle } from \"./tableHandle/TableHandle.js\";\nimport { Toolbar, ToolbarButton, ToolbarSelect } from \"./toolbar/Toolbar.js\";\n\nimport { PanelButton } from \"./panel/PanelButton.js\";\nimport { PanelFileInput } from \"./panel/PanelFileInput.js\";\nimport \"./style.css\";\nimport { GridSuggestionMenuItem } from \"./suggestionMenu/gridSuggestionMenu/GridSuggestionMenuItem.js\";\nimport { GridSuggestionMenuLoader } from \"./suggestionMenu/gridSuggestionMenu/GridSuggestionMenuLoader.js\";\n\nexport const components: Components = {\n  FormattingToolbar: {\n    Root: Toolbar,\n    Button: ToolbarButton,\n    Select: ToolbarSelect,\n  },\n  FilePanel: {\n    Root: Panel,\n    Button: PanelButton,\n    FileInput: PanelFileInput,\n    TabPanel: PanelTab,\n    TextInput: PanelTextInput,\n  },\n  LinkToolbar: {\n    Root: Toolbar,\n    Button: ToolbarButton,\n  },\n  SideMenu: {\n    Root: SideMenu,\n    Button: SideMenuButton,\n  },\n  SuggestionMenu: {\n    Root: SuggestionMenu,\n    Item: SuggestionMenuItem,\n    EmptyItem: SuggestionMenuEmptyItem,\n    Label: SuggestionMenuLabel,\n    Loader: SuggestionMenuLoader,\n  },\n  GridSuggestionMenu: {\n    Root: GridSuggestionMenu,\n    Item: GridSuggestionMenuItem,\n    EmptyItem: GridSuggestionMenuEmptyItem,\n    Loader: GridSuggestionMenuLoader,\n  },\n  TableHandle: {\n    Root: TableHandle,\n    ExtendButton: ExtendButton,\n  },\n  Generic: {\n    Form: {\n      Root: Form,\n      TextInput: TextInput,\n    },\n    Menu: {\n      Root: Menu,\n      Trigger: MenuTrigger,\n      Dropdown: MenuDropdown,\n      Divider: MenuDivider,\n      Label: MenuLabel,\n      Item: MenuItem,\n    },\n    Popover: {\n      Root: Popover,\n      Trigger: PopoverTrigger,\n      Content: PopoverContent,\n    },\n  },\n};\n\nexport const BlockNoteView = <\n  BSchema extends BlockSchema,\n  ISchema extends InlineContentSchema,\n  SSchema extends StyleSchema\n>(\n  props: BlockNoteViewProps<BSchema, ISchema, SSchema> & {\n    /**\n     * (optional)Provide your own shadcn component overrides\n     */\n    shadCNComponents?: Partial<ShadCNComponents>;\n  }\n) => {\n  const { className, shadCNComponents, ...rest } = props;\n\n  const componentsValue = useMemo(() => {\n    return {\n      ...ShadCNDefaultComponents,\n      ...shadCNComponents,\n    };\n  }, [shadCNComponents]);\n\n  return (\n    <ShadCNComponentsContext.Provider value={componentsValue}>\n      <ComponentsContext.Provider value={components}>\n        <BlockNoteViewRaw\n          className={mergeCSSClasses(\"bn-shadcn\", className || \"\")}\n          {...rest}\n        />\n      </ComponentsContext.Provider>\n    </ShadCNComponentsContext.Provider>\n  );\n};\n"],"names":["twMerge","extendTailwindMerge","cn","inputs","clsx","badgeVariants","cva","Badge","className","variant","props","jsx","buttonVariants","Button","React","size","asChild","ref","Slot","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","DropdownMenuSub","DropdownMenuSubTrigger","inset","children","jsxs","ChevronRight","DropdownMenuSubContent","DropdownMenuContent","sideOffset","DropdownMenuItem","DropdownMenuCheckboxItem","checked","Check","DropdownMenuRadioItem","Circle","DropdownMenuLabel","DropdownMenuSeparator","labelVariants","Label","LabelPrimitive","Form","FormProvider","FormFieldContext","useFormField","fieldContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","id","FormItem","FormLabel","error","formItemId","FormControl","formDescriptionId","formMessageId","FormDescription","FormMessage","body","Input","type","Popover","PopoverPrimitive","PopoverTrigger","PopoverContent","align","Select","SelectPrimitive","SelectValue","SelectTrigger","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","position","SelectLabel","SelectItem","SelectSeparator","Tabs","TabsPrimitive","TabsList","TabsTrigger","TabsContent","toggleVariants","Toggle","TogglePrimitive","TooltipProvider","TooltipPrimitive","Tooltip","TooltipTrigger","TooltipContent","ShadCNDefaultComponents","ShadCNBadge","ShadCNButton","ShadCNCard","ShadCNCardContent","ShadCNDropdownMenu","ShadCNDropdownMenuCheckboxItem","ShadCNDropdownMenuContent","ShadCNDropdownMenuItem","ShadCNDropdownMenuLabel","ShadCNDropdownMenuSeparator","ShadCNDropdownMenuSub","ShadCNDropdownMenuSubContent","ShadCNDropdownMenuSubTrigger","ShadCNDropdownMenuTrigger","ShadCNForm","ShadCNInput","ShadCNLabel","ShadCNPopover","ShadCNPopoverContent","ShadCNPopoverTrigger","ShadCNSelect","ShadCNSelectContent","ShadCNSelectItem","ShadCNSelectTrigger","ShadCNSelectValue","ShadCNTabs","ShadCNTabsContent","ShadCNTabsList","ShadCNTabsTrigger","ShadCNToggle","ShadCNTooltip","ShadCNTooltipContent","ShadCNTooltipProvider","ShadCNTooltipTrigger","ShadCNComponentsContext","createContext","useShadCNComponentsContext","useContext","rest","assertEmpty","ShadCNComponents","form","useForm","TextInput","forwardRef","name","label","icon","value","autoFocus","placeholder","onKeyDown","onChange","onSubmit","MenuTriggerWithPointerUp","Comp","e","event","Menu","onOpenChange","sub","MenuTrigger","useMemo","MenuDropdown","MenuItem","subTrigger","onClick","Fragment","MenuDivider","MenuLabel","Panel","tabs","defaultOpenTab","openTab","setOpenTab","loading","tab","PanelTab","PanelTextInput","opened","SideMenu","SideMenuButton","onDragEnd","onDragStart","draggable","GridSuggestionMenu","columns","GridSuggestionMenuEmptyItem","SuggestionMenu","SuggestionMenuEmptyItem","SuggestionMenuItem","item","isSelected","itemRef","useRef","useEffect","overflow","elementOverflow","mergeRefs","SuggestionMenuLabel","SuggestionMenuLoader","ExtendButton","onMouseDown","TableHandle","style","Toolbar","onMouseEnter","onMouseLeave","ToolbarButton","mainTooltip","secondaryTooltip","isDisabled","trigger","ToolbarSelect","items","SelectItemContent","selectedItem","p","_b","_a","PanelButton","PanelFileInput","accept","GridSuggestionMenuItem","GridSuggestionMenuLoader","components","BlockNoteView","shadCNComponents","componentsValue","ComponentsContext","BlockNoteViewRaw","mergeCSSClasses"],"mappings":"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"}